{"version":3,"sources":["scripts/main.js"],"names":["inputsCollection","document","querySelectorAll","elem","labelForInput","createElement","parentElem","parentNode","className","nextWordIndex","i","name","length","toUpperCase","text","slice","setAttribute","id","prepend","textContent"],"mappings":";AAAA,aAkCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCD,IAgCC,EAhCKA,EAAmBC,SAASC,iBAAiB,SAEhCF,EAAAA,EAAAA,GA8BlB,IA9BoC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA1BG,IAAAA,EAA0B,EAAA,MAC7BC,EAAgBH,SAASI,cAAc,SACvCC,EAAaH,EAAKI,WAExBH,EAAcI,UAAY,cAIrB,IAFDC,IAAAA,EAAgB,KAEXC,EAAI,EAAGA,EAAIP,EAAKQ,KAAKC,OAAQF,IAChCP,EAAKQ,KAAKD,GAAGG,gBAAkBV,EAAKQ,KAAKD,KAC3CD,EAAgBC,GAIhBI,IAAAA,EAAO,GAGTA,EADEL,EACKN,EAAKQ,KAAKI,MAAM,EAAGN,GACxB,IAAMN,EAAKQ,KAAKI,MAAMN,GAEjBN,EAAKQ,KAGdP,EAAcY,aAAa,MAAOb,EAAKc,IACvCX,EAAWY,QAAQd,GAEnBA,EAAce,YAAcL,EAAKD,cAEjCV,EAAKa,aAAa,cAChBF,EAAK,GAAGD,cAAgBC,EAAKC,MAAM,KACtC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.641e314c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputsCollection = document.querySelectorAll('input');\n\nfor (const elem of inputsCollection) {\n  const labelForInput = document.createElement('label');\n  const parentElem = elem.parentNode;\n\n  labelForInput.className = 'field-label';\n\n  let nextWordIndex = null;\n\n  for (let i = 0; i < elem.name.length; i++) {\n    if (elem.name[i].toUpperCase() === elem.name[i]) {\n      nextWordIndex = i;\n    }\n  }\n\n  let text = '';\n\n  if (nextWordIndex) {\n    text = elem.name.slice(0, nextWordIndex)\n    + ' ' + elem.name.slice(nextWordIndex);\n  } else {\n    text = elem.name;\n  }\n\n  labelForInput.setAttribute('for', elem.id);\n  parentElem.prepend(labelForInput);\n\n  labelForInput.textContent = text.toUpperCase();\n\n  elem.setAttribute('placeholder',\n    text[0].toUpperCase() + text.slice(1));\n}\n"]}